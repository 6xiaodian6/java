<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
       default-lazy-init="false" default-autowire="byName">

    <context:property-placeholder location="classpath:springMVC_mybatis/db.properties"/>
    <!--这种配置式的获取数据库连接的方式始终的实现不了，不知原因可能是加载配置文件的时机不对造成的-->
    <!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">-->
        <!--<property name="driverClassName">-->
            <!--<value>${driverClassName}</value>-->
        <!--</property>-->
        <!--<property name="url">-->
            <!--<value>${url}</value>-->
        <!--</property>-->
        <!--<property name="username">-->
            <!--<value>${username}</value>-->
        <!--</property>-->
        <!--<property name="password">-->
            <!--<value>${password}</value>-->
        <!--</property>-->
    <!--</bean>-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"
          p:driverClassName="com.mysql.cj.jdbc.Driver"
          p:url="jdbc:mysql://localhost:3306/yd?serverTimezone=UTC"
          p:username="root"
          p:password="ROOT"
          p:maxActive="10"
          p:maxIdle="10">
    </bean>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:springMVC_mybatis/Configure.xml"/>
        <!--此处可以使用正则表达式进行批量的配置，例如注释掉的内容-->
        <!--<property name="mapperLocations" value="classpath*:springMVC_mybatis/mapper/*.xml"/>-->
        <property name="mapperLocations" value="classpath:springMVC_mybatis/StudentMapper.xml"/>
    </bean>
    <!--扫描mapper文件夹的配置-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="springMVC_mybatis"/>
    </bean>
</beans>